//
// Generated by Bluespec Compiler, version 2025.01.1 (build 65e3a87)
//
// On Mon Apr 14 01:11:16 IST 2025
//
//
// Ports:
// Name                         I/O  size props
// CLK                            I     1 clock
// RST_N                          I     1 reset
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkSimpleFSM(CLK,
		   RST_N);
  input  CLK;
  input  RST_N;

  // register currentState
  reg [1 : 0] currentState;
  reg [1 : 0] currentState$D_IN;
  wire currentState$EN;

  // register currentState
  always@(currentState)
  begin
    case (1'b1) // synopsys parallel_case
      currentState == 2'd0: currentState$D_IN = 2'd1;
      currentState == 2'd1: currentState$D_IN = 2'd2;
      currentState == 2'd2: currentState$D_IN = 2'd3;
      default: currentState$D_IN = 2'b10 /* unspecified value */ ;
    endcase
  end
  assign currentState$EN =
	     currentState == 2'd0 || currentState == 2'd1 ||
	     currentState == 2'd2 ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        currentState <= `BSV_ASSIGNMENT_DELAY 2'd0;
      end
    else
      begin
        if (currentState$EN)
	  currentState <= `BSV_ASSIGNMENT_DELAY currentState$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    currentState = 2'h2;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (currentState == 2'd0) $display("In S0, going to S1");
    if (RST_N != `BSV_RESET_VALUE)
      if (currentState == 2'd1) $display("In S1, going to S2");
    if (RST_N != `BSV_RESET_VALUE)
      if (currentState == 2'd2) $display("In S2, going to S3");
    if (RST_N != `BSV_RESET_VALUE)
      if (currentState == 2'd3) $display("In S3, done");
    if (RST_N != `BSV_RESET_VALUE) if (currentState == 2'd3) $finish(32'd1);
  end
  // synopsys translate_on
endmodule  // mkSimpleFSM

